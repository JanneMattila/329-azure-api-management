{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apimName": {
      "type": "string",
      "metadata": {
        "description": "API Management name."
      }
    },
    "publisherEmail": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The email address of the owner of the service"
      }
    },
    "publisherName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The name of the owner of the service"
      }
    },
    "api_httpbin_serviceUrl": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "ServiceUrl of the HttpBinAPI"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "templateUrl": {
      "type": "string",
      "metadata": {
        "description": "Storage account container base url for deployment templates"
      }
    },
    "templateToken": {
      "type": "string",
      "metadata": {
        "description": "Storage account access token for accessing templates"
      }
    }
  },
  "variables": {
  },
  "resources": [
    {
      "name": "[parameters('apimName')]",
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2019-01-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Consumption"
      },
      "properties": {
        "publisherEmail": "[parameters('publisherEmail')]",
        "publisherName": "[parameters('publisherName')]"
      }
    },
    {
      "name": "apiHttpbinTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
            "uri":"[concat(parameters('templateUrl'), 'api/httpbin/api.json', parameters('templateToken'))]"
        },
        /*
         * If you prefer configuration parameters in file then this is option:
        "parametersLink": {
          "uri": "[concat(parameters('templateUrl'), 'api/httpbin/api.parameters.json', parameters('templateToken'))]"
        }
         */
        "parameters": {
            "apimName": {
              "value": "[parameters('apimName')]" 
            },
            "serviceUrl": {
              "value": "[parameters('api_httpbin_serviceUrl')]" 
            }
            /*
            * If you prefer configuration parameters from KeyVault then this is option:
            "serviceUrl": {
              "reference": {
                "keyVault": {
                  "id": "[resourceId(parameters('keyVaultSubscription'), parameters('keyVaultResourceGroupName'), 'Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                },
                "serviceUrl": "API-httpbin-ServiceUrl"
              }
            }
            */
          }
      },
      "dependsOn": [
        "[parameters('apimName')]"
      ]
    }
  ],
  "outputs": {
    "apimGateway": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apimName'))).gatewayUrl]"
    }
  }
}
